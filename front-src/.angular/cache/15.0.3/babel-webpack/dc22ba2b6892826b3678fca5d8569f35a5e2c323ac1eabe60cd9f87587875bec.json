{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nlet ProfileComponent = class ProfileComponent {\n  constructor(storageService, userService, authService) {\n    this.storageService = storageService;\n    this.userService = userService;\n    this.authService = authService;\n    this.users = [];\n    this.friendslist = [];\n    this.showModif = false;\n    this.subject = new Subject();\n    this.newrole = '';\n    this.form = {\n      username: null,\n      email: null,\n      role: null,\n      password: null\n    };\n    this.isSuccessful = false;\n    this.isSignUpFailed = false;\n    this.errorMessage = '';\n  }\n  delFriend(friendname) {\n    this.userService.delFriend(this.currentUser.username, friendname).subscribe(() => {\n      console.log('Friend removed successfully');\n      this.reloadPage();\n    }, error => {\n      console.error(error);\n    });\n  }\n  addFriend(friendname) {\n    this.userService.addFriend(this.currentUser, friendname).subscribe(() => {\n      console.log('Friend added successfully');\n      this.reloadPage();\n    }, error => {\n      console.error(error);\n    });\n  }\n  toggleModif() {\n    this.showModif = !this.showModif;\n    this.subject.next(this.showModif);\n  }\n  onToggle() {\n    return this.subject.asObservable();\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n  onSubmit() {\n    if (!this.newrole) {\n      alert('Please add a role!');\n      return;\n    }\n    this.userService.updateRole(this.currentUser.username, this.newrole).subscribe(() => {\n      console.log('Role modified successfully');\n    }, error => {\n      console.error(error);\n    });\n    this.currentUser = this.storageService.getUser();\n  }\n  ngOnInit() {\n    this.userService.getUsers().subscribe(users => {\n      this.users = users;\n    });\n    this.currentUser = this.storageService.getUser();\n    this.loggedInUser = this.storageService.isLoggedIn();\n  }\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})], ProfileComponent);\nexport { ProfileComponent };","map":{"version":3,"mappings":"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","names":["Component","Subject","ProfileComponent","constructor","storageService","userService","authService","username","email","role","password","delFriend","friendname","currentUser","subscribe","console","log","reloadPage","error","addFriend","toggleModif","showModif","subject","next","onToggle","asObservable","window","location","reload","onSubmit","newrole","alert","updateRole","getUser","ngOnInit","getUsers","users","loggedInUser","isLoggedIn","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Mahmoud\\Desktop\\angular\\Smurfs-Book\\front-src\\src\\app\\profile\\profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { StorageService } from '../_services/storage.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  currentUser: any;\r\n  users: any[] = [];\r\n  friendslist: any[] = [];\r\n  loggedInUser: any;\r\n  showModif: boolean = false;\r\n  private subject = new Subject<any>();\r\n  newrole: string = '';\r\n\r\n  form: any = {\r\n    username: null,\r\n    email: null,\r\n    role: null,\r\n    password: null\r\n  };\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n\r\n  constructor(private storageService: StorageService, private userService: UserService, private authService: AuthService) { }\r\n\r\n  delFriend(friendname: string) {\r\n    this.userService.delFriend(this.currentUser.username, friendname).subscribe(() => {\r\n      console.log('Friend removed successfully');\r\n      this.reloadPage();\r\n    }, error => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  addFriend(friendname: string) {\r\n    this.userService.addFriend(this.currentUser, friendname).subscribe(() => {\r\n      console.log('Friend added successfully');\r\n      this.reloadPage();\r\n    }, error => {\r\n      console.error(error);\r\n    });\r\n}\r\n\r\n  toggleModif(): void {\r\n    this.showModif = !this.showModif;\r\n    this.subject.next(this.showModif);\r\n  }\r\n\r\n  onToggle(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  reloadPage(): void {\r\n    window.location.reload();\r\n  }\r\n\r\n  onSubmit():void {\r\n    if (!this.newrole) {\r\n      alert('Please add a role!');\r\n      return;\r\n    }\r\n    this.userService.updateRole(this.currentUser.username, this.newrole).subscribe(() => {\r\n      console.log('Role modified successfully');\r\n    }, error => {\r\n      console.error(error);\r\n    });\r\n    this.currentUser = this.storageService.getUser();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUsers().subscribe(users => {\r\n      this.users = <any[]>users;\r\n    });\r\n    this.currentUser = this.storageService.getUser();\r\n    this.loggedInUser = this.storageService.isLoggedIn();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}